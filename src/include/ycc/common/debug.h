/*
 * debug.h - I/O routines for debugging
 *
 * Copyright (C) 2012-2013 yanyg (yygcode@gmail.com, cppgp@qq.com)
 *
 * Mon Jun 11, 2012
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; see the file COPYING, if not see
 * <http://www.gnu.org/licenses/>.
 */

#ifndef __YCC_COMMON_DEBUG_H_
#define __YCC_COMMON_DEBUG_H_	1

#include <assert.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stdio.h>

#include <ycc/config-ycc.h>

__BEGIN_DECLS

#ifdef NDEBUG
/* NDEBUG: turn off */
#define DBG_INSERT(...)		__ASSERT_VOID_CAST(0)
#define DBG_PR(fmt, ...)	__ASSERT_VOID_CAST(0)
#define DBG_PE(fmt, ...)	__ASSERT_VOID_CAST(0)
#define DBG_VPR(fmt, ...)	__ASSERT_VOID_CAST(0)
#define DBG_VPE(fmt, ...)	__ASSERT_VOID_CAST(0)
#else
#define DBG_INSERT(...)		__VA_ARGS__
#define DBG_PR(fmt, ...)	__dbg_fprintf(__FILE__, __func__, __LINE__, \
					      false, (fmt), ## __VA_ARGS__)
#define DBG_PE(fmt, ...)	__dbg_fprintf(__FILE__, __func__, __LINE__, \
					      true, (fmt), ## __VA_ARGS__)
#define DBG_VPR(fmt, ap)	__dbg_vprintf(__FILE__, __func__, __LINE__, \
					      false, (fmt), (ap))
#define DBG_VPE(fmt, ap)	__dbg_vprintf(__FILE__, __func__, __LINE__, \
					      true, (fmt), (ap))
#endif

/*
 * __dbg_printf - output debug string
 *
 * If berr is true, then append a colon and error-string generated by
 * strerror(errno).
 *
 * Do not use the function directly, Use above defined macros instead.
 */
void __printf(5, 6)
__dbg_fprintf(const char *file, const char *func, size_t line,
	      bool berr, const char *fmt, ...);

/*
 * __dbg_vprintf - like as __dbg_printf, replaced dynamical args with ap.
 *
 * Do not use the function directly, Use above defined macros instead.
 */
void __dbg_vprintf(const char *file, const char *func, size_t line,
		   bool berr, const char *fmt, va_list ap);

__END_DECLS

#endif
